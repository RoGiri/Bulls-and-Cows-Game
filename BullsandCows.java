import java.util.Scanner;

/**
 * Bulls and Cows is an old code-breaking game for two players.
 *
 *
 * This is a program for bulls and cows game in which computer will generate random 4 digit number's
 * and user has to guess the generated number
 *  If the matching digits are on their right positions, they are "bulls",
 *  if on different positions, they are "cows".
 *  the digits must be all different, digit zero (0) is not allowed
 *
 * @author (Rojan Giri )
 * @version (V1 18/03/19)
 */

public class BullsandCows {

    private static String randString="";
    private static String userString="";
    private static int score;
    private static int bull;
    private static int cow;


    public static void main(String[] args) {

        WelcomeMessage();
        generate();
        run();
    }

    /**
     * The initial score has been set to 10
     * won value has been set to false
     * it will ask for the input from the user_input method
     * decrements the score if the user has input the guessed number
     * it checks if the user input is at the same position to randomly generated number, which increments the bull
     * it checks if randomly generated number contain user input number, which increments the cow value
     * if the bull value increments to 4 then then won will set to true
     * it will print out "Try Again" until the bull value is 4 or the score becomes 0
     * if the score hits 0 then the game will end,and the player has lost the game
     * if the bull has been set to 4 then the game will end and the player has won the game
     *
     */

    private static void run() {

        score = 10;
        System.out.println("Generated number is " + randString);
        System.out.println("Please enter 4 - digit number. Duplicated not allowed!");// print
        boolean won = false;

        do {
            bull = 0;// initial value
            cow = 0;// initial value
            user_input();
            score--;
            System.out.println("You have " + score + " gusses left");

            for (int i = 0; i < 4; i++) {
                if (userString.charAt(i) == randString.charAt(i)) {
                    bull++;
                } else if (randString.contains(userString.charAt(i) + "")) {
                    cow++;
                }
            }
            if (bull == 4) {
                won = true;

            } else {

                System.out.println("Try Again! you have " + cow + " Cows and " + bull + " Bulls.");
            }
            if (score == 0) {
                System.out.println("");
                System.out.println("You have ran out of guesses. Play Again!");

                System.exit(0);
            }
        }
        while (!won);
        System.out.println("");
        System.out.println("You have " + cow + " Cows and " + bull + " Bulls.");
        System.out.println("You have Won in " + score + " gussess");
    }


    /**
     *This prints out the intro message when the player starts the game
     *
     */
    private static void WelcomeMessage(){
        System.out.println("Welcome to my BULLS and COWS game.");
        System.out.println("The objective in thos game is for the player to guess 4-digit number which is generated by the computer");
        System.out.println("BULLS  are common digits with exact matches.");
        System.out.println("COWS are common digits in wrong position.");
        System.out.println("You need to get 4 Bulls to win this game");
        System.out.println("You have 10 guesses in this game");
        System.out.println();

    }

    /**
     *it checks if the list has got duplicates by comparing each element
     * return true otherwise return false
     *
     * @param num
     * @return false
     *
     */

    private static boolean checkdup(String num) {
        for (int i = 0; i < num.length() - 1; i++) {
            for (int j = i + 1; j < num.length(); j++) {
                if (num.charAt(i) == num.charAt(j)) {
                    return true;
                }
            }
        }
        return false;

    }


    /**
     * Max has been set to 9999
     * min has been set to 1000
     * it generates 4 digit random number
     * it coverts the number into string
     * if the generated number has got duplicates then will generate the number again
     * if the generated number contains 0 then it will call it self and generate new random number
     * @return  randStirng
     *
     */
    private static String generate() {

        int max = 9999;
        int min = 1000;
        int generate = min + (int) (Math.random() * ((max - min) + 1));
        randString = Integer.toString(generate);
        while (checkdup(randString)) {
            generate();
        }
        if(randString.contains("0")){
            generate();
        }
        return randString;

    }



    /**
     * Get the input from the user and check if the number is equal to 4.
     * If the inout is more or less then 4 then, it will print message and ask for another input
     * it also check if the input has got any duplicates.
     * if it has got any duplicates then it should ask for input again.
     * it will also catch any string, if the user anything other then numbers
     *
     * @return  userStirng
     *
     */

    private static String user_input() {
        try {
            Scanner input = new Scanner(System.in);
            int user_guess;
            user_guess = input.nextInt();
            System.out.println("You entered " + user_guess);
            System.out.println("");
            userString = Integer.toString(user_guess);
            if(userString.length()!=4) {
                System.out.println("Not Allowed! Please enter 4- Digit Number");
                user_input();
            }
            else if (checkdup(userString)) {
                System.out.println("Duplicated digit isn't accpeted. Please enter another guess");
                user_input();
            }

        } catch (Exception e) {
            System.out.println("Only enter numbers & only 4 digit");
            user_input();

        }
        return userString;
    }




}// finishing  bracket of the program



